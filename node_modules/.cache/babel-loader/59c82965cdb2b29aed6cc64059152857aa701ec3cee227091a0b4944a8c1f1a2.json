{"ast":null,"code":"import _objectSpread from \"C:/Users/mghunter/Downloads/todo/todo/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _jsxFileName = \"C:\\\\Users\\\\mghunter\\\\Downloads\\\\todo\\\\todo\\\\src\\\\components\\\\TodoList.js\",\n  _this = this;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Todo from './Todo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar TodoList = function TodoList(_ref) {\n  var todos = _ref.todos,\n    toggleTodo = _ref.toggleTodo;\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    class: \"list-group\",\n    children: todos.map(function (todo) {\n      return /*#__PURE__*/_jsxDEV(Todo, _objectSpread(_objectSpread({}, todo), {}, {\n        onClick: function onClick() {\n          return toggleTodo(todo.id);\n        }\n      }), todo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 7\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 3\n  }, _this);\n};\n_c = TodoList;\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    completed: PropTypes.bool.isRequired,\n    text: PropTypes.string.isRequired\n  }).isRequired).isRequired,\n  toggleTodo: PropTypes.func.isRequired\n};\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","PropTypes","Todo","jsxDEV","_jsxDEV","TodoList","_ref","todos","toggleTodo","class","children","map","todo","_objectSpread","onClick","id","fileName","_jsxFileName","lineNumber","columnNumber","_this","_c","propTypes","arrayOf","shape","number","isRequired","completed","bool","text","string","func","$RefreshReg$"],"sources":["C:/Users/mghunter/Downloads/todo/todo/src/components/TodoList.js"],"sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport Todo from './Todo'\n\nconst TodoList = ({ todos, toggleTodo }) => (\n  <ul class=\"list-group\">\n    {todos.map(todo =>\n      <Todo\n        key={todo.id}\n        {...todo}\n        onClick={() => toggleTodo(todo.id)}\n      />\n    )}\n  </ul>\n)\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    completed: PropTypes.bool.isRequired,\n    text: PropTypes.string.isRequired\n  }).isRequired).isRequired,\n  toggleTodo: PropTypes.func.isRequired\n}\n\nexport default TodoList\n"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,IAAI,MAAM,QAAQ;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,IAAMC,QAAQ,GAAG,SAAXA,QAAQA,CAAAC,IAAA;EAAA,IAAMC,KAAK,GAAAD,IAAA,CAALC,KAAK;IAAEC,UAAU,GAAAF,IAAA,CAAVE,UAAU;EAAA,oBACnCJ,OAAA;IAAIK,KAAK,EAAC,YAAY;IAAAC,QAAA,EACnBH,KAAK,CAACI,GAAG,CAAC,UAAAC,IAAI;MAAA,oBACbR,OAAA,CAACF,IAAI,EAAAW,aAAA,CAAAA,aAAA,KAECD,IAAI;QACRE,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMN,UAAU,CAACI,IAAI,CAACG,EAAE,CAAC;QAAA;MAAC,IAF9BH,IAAI,CAACG,EAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KAGb,CAAC;IAAA,CACJ;EAAC;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,GAAAC,KACC,CAAC;AAAA,CACN;AAAAC,EAAA,GAVKhB,QAAQ;AAYdA,QAAQ,CAACiB,SAAS,GAAG;EACnBf,KAAK,EAAEN,SAAS,CAACsB,OAAO,CAACtB,SAAS,CAACuB,KAAK,CAAC;IACvCT,EAAE,EAAEd,SAAS,CAACwB,MAAM,CAACC,UAAU;IAC/BC,SAAS,EAAE1B,SAAS,CAAC2B,IAAI,CAACF,UAAU;IACpCG,IAAI,EAAE5B,SAAS,CAAC6B,MAAM,CAACJ;EACzB,CAAC,CAAC,CAACA,UAAU,CAAC,CAACA,UAAU;EACzBlB,UAAU,EAAEP,SAAS,CAAC8B,IAAI,CAACL;AAC7B,CAAC;AAED,eAAerB,QAAQ;AAAA,IAAAgB,EAAA;AAAAW,YAAA,CAAAX,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}